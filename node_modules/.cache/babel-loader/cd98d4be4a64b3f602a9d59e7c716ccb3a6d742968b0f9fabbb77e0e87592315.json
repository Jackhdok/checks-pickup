{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PIG\\\\OneDrive - PI Group\\\\Desktop\\\\CHECKIN\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CheckInForm from './components/CheckInForm';\nimport WaitingList from './components/WaitingList';\nimport AdminPage from './components/AdminPage';\nimport ThemeToggle from './components/ThemeToggle';\nimport { Settings, Users } from 'lucide-react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [waitingList, setWaitingList] = useState([]);\n  const [isLightMode, setIsLightMode] = useState(false);\n  const [currentView, setCurrentView] = useState('public'); // 'public' or 'admin'\n  const [calledClient, setCalledClient] = useState(null);\n  const addToWaitingList = clientData => {\n    const newClient = {\n      id: Date.now(),\n      ...clientData,\n      checkInTime: new Date().toLocaleString(),\n      status: 'waiting'\n    };\n    setWaitingList(prev => [...prev, newClient]);\n  };\n  const removeFromWaitingList = id => {\n    setWaitingList(prev => prev.filter(client => client.id !== id));\n  };\n  const updateClientStatus = (id, status) => {\n    setWaitingList(prev => prev.map(client => client.id === id ? {\n      ...client,\n      status\n    } : client));\n  };\n  const callClient = id => {\n    const client = waitingList.find(c => c.id === id);\n    if (client) {\n      setCalledClient(client);\n      updateClientStatus(id, 'called');\n      // Show call notification for 5 seconds\n      setTimeout(() => {\n        setCalledClient(null);\n      }, 5000);\n    }\n  };\n  const getPublicWaitingList = () => {\n    return waitingList.filter(client => client.status !== 'completed');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${isLightMode ? 'light-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Check-in Waiting List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemeToggle, {\n          isLightMode: isLightMode,\n          setIsLightMode: setIsLightMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(CheckInForm, {\n          onAddToWaitingList: addToWaitingList,\n          isLightMode: isLightMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WaitingList, {\n          waitingList: waitingList,\n          onRemove: removeFromWaitingList,\n          onUpdateStatus: updateClientStatus,\n          isLightMode: isLightMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K9711BCmEHMffjbEUK5i4iJ3Odk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CheckInForm","WaitingList","AdminPage","ThemeToggle","Settings","Users","jsxDEV","_jsxDEV","App","_s","waitingList","setWaitingList","isLightMode","setIsLightMode","currentView","setCurrentView","calledClient","setCalledClient","addToWaitingList","clientData","newClient","id","Date","now","checkInTime","toLocaleString","status","prev","removeFromWaitingList","filter","client","updateClientStatus","map","callClient","find","c","setTimeout","getPublicWaitingList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddToWaitingList","onRemove","onUpdateStatus","_c","$RefreshReg$"],"sources":["C:/Users/PIG/OneDrive - PI Group/Desktop/CHECKIN/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CheckInForm from './components/CheckInForm';\r\nimport WaitingList from './components/WaitingList';\r\nimport AdminPage from './components/AdminPage';\r\nimport ThemeToggle from './components/ThemeToggle';\r\nimport { Settings, Users } from 'lucide-react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [waitingList, setWaitingList] = useState([]);\r\n  const [isLightMode, setIsLightMode] = useState(false);\r\n  const [currentView, setCurrentView] = useState('public'); // 'public' or 'admin'\r\n  const [calledClient, setCalledClient] = useState(null);\r\n\r\n  const addToWaitingList = (clientData) => {\r\n    const newClient = {\r\n      id: Date.now(),\r\n      ...clientData,\r\n      checkInTime: new Date().toLocaleString(),\r\n      status: 'waiting'\r\n    };\r\n    setWaitingList(prev => [...prev, newClient]);\r\n  };\r\n\r\n  const removeFromWaitingList = (id) => {\r\n    setWaitingList(prev => prev.filter(client => client.id !== id));\r\n  };\r\n\r\n  const updateClientStatus = (id, status) => {\r\n    setWaitingList(prev => \r\n      prev.map(client => \r\n        client.id === id ? { ...client, status } : client\r\n      )\r\n    );\r\n  };\r\n\r\n  const callClient = (id) => {\r\n    const client = waitingList.find(c => c.id === id);\r\n    if (client) {\r\n      setCalledClient(client);\r\n      updateClientStatus(id, 'called');\r\n      // Show call notification for 5 seconds\r\n      setTimeout(() => {\r\n        setCalledClient(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  const getPublicWaitingList = () => {\r\n    return waitingList.filter(client => client.status !== 'completed');\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${isLightMode ? 'light-mode' : ''}`}>\r\n      <header className=\"app-header\">\r\n        <div className=\"header-content\">\r\n          <h1>Check-in Waiting List</h1>\r\n          <ThemeToggle isLightMode={isLightMode} setIsLightMode={setIsLightMode} />\r\n        </div>\r\n      </header>\r\n      \r\n      <main className=\"app-main\">\r\n        <div className=\"container\">\r\n          <CheckInForm onAddToWaitingList={addToWaitingList} isLightMode={isLightMode} />\r\n          <WaitingList \r\n            waitingList={waitingList} \r\n            onRemove={removeFromWaitingList}\r\n            onUpdateStatus={updateClientStatus}\r\n            isLightMode={isLightMode}\r\n          />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}