{"ast":null,"code":"// SMS Webhook Service for sending messages to visitors\n// Add your SMS webhook URL to environment variables\n\nconst sendSMSNotification = async clientData => {\n  const smsWebhookUrl = process.env.REACT_APP_SMS_WEBHOOK_URL;\n  if (!smsWebhookUrl) {\n    console.warn('SMS webhook URL not configured. Skipping SMS notification.');\n    return;\n  }\n  const message = {\n    \"to\": clientData.phone,\n    \"message\": `Hi ${clientData.name}, your checks are ready for pickup! Please come to the Accounting Room. Thank you!`\n  };\n  try {\n    const response = await fetch(smsWebhookUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(message)\n    });\n    if (response.ok) {\n      console.log('SMS notification sent successfully');\n    } else {\n      console.error('Failed to send SMS notification:', response.statusText);\n    }\n  } catch (error) {\n    console.error('Error sending SMS notification:', error);\n  }\n};\nexport default sendSMSNotification;","map":{"version":3,"names":["sendSMSNotification","clientData","smsWebhookUrl","process","env","REACT_APP_SMS_WEBHOOK_URL","console","warn","message","phone","name","response","fetch","method","headers","body","JSON","stringify","ok","log","error","statusText"],"sources":["C:/Users/PIG/OneDrive - PI Group/Desktop/CHECKIN/src/services/smsWebhook.js"],"sourcesContent":["// SMS Webhook Service for sending messages to visitors\r\n// Add your SMS webhook URL to environment variables\r\n\r\nconst sendSMSNotification = async (clientData) => {\r\n  const smsWebhookUrl = process.env.REACT_APP_SMS_WEBHOOK_URL;\r\n  \r\n  if (!smsWebhookUrl) {\r\n    console.warn('SMS webhook URL not configured. Skipping SMS notification.');\r\n    return;\r\n  }\r\n\r\n  const message = {\r\n    \"to\": clientData.phone,\r\n    \"message\": `Hi ${clientData.name}, your checks are ready for pickup! Please come to the Accounting Room. Thank you!`\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(smsWebhookUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(message)\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log('SMS notification sent successfully');\r\n    } else {\r\n      console.error('Failed to send SMS notification:', response.statusText);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error sending SMS notification:', error);\r\n  }\r\n};\r\n\r\nexport default sendSMSNotification;\r\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,mBAAmB,GAAG,MAAOC,UAAU,IAAK;EAChD,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAE3D,IAAI,CAACH,aAAa,EAAE;IAClBI,OAAO,CAACC,IAAI,CAAC,4DAA4D,CAAC;IAC1E;EACF;EAEA,MAAMC,OAAO,GAAG;IACd,IAAI,EAAEP,UAAU,CAACQ,KAAK;IACtB,SAAS,EAAE,MAAMR,UAAU,CAACS,IAAI;EAClC,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,aAAa,EAAE;MAC1CW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO;IAC9B,CAAC,CAAC;IAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;MACfZ,OAAO,CAACa,GAAG,CAAC,oCAAoC,CAAC;IACnD,CAAC,MAAM;MACLb,OAAO,CAACc,KAAK,CAAC,kCAAkC,EAAET,QAAQ,CAACU,UAAU,CAAC;IACxE;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdd,OAAO,CAACc,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;EACzD;AACF,CAAC;AAED,eAAepB,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}